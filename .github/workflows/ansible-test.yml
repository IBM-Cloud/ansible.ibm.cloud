name: CI
on:
  # Run CI against all pushes (direct commits, also merged PRs), Pull Requests
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  NAMESPACE: ibm
  COLLECTION_NAME: cloud 

jobs:

###
# Sanity and unity tests (REQUIRED)
#
# https://docs.ansible.com/ansible/latest/dev_guide/testing_sanity.html

  sanity-and-unity:
    name: Sanity (â’¶${{ matrix.ansible }})
    strategy:
      matrix:
        ansible:
          # It's important that Sanity is tested against all stable-X.Y branches
          # Testing against `devel` may fail as new tests are added.
          # - stable-2.9 # Only if your collection supports Ansible 2.9
          # - stable-2.10
          # - stable-2.11
          # - stable-2.12
          - stable-2.13
          # - devel
    runs-on: ubuntu-latest
    steps:

      # ansible-test requires the collection to be in a directory in the form
      # .../ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}/

      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          # it is just required to run that once as "ansible-test sanity" in the docker image
          # will run on all python versions it supports.
          python-version: 3.9

      # Install the head of the given branch (devel, stable-2.10)
      - name: Install ansible-base (${{ matrix.ansible }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      # run ansible-test sanity on plugins
      - name: Run sanity tests on plugins
        run: ansible-test sanity --python=3.9 --requirements --skip-test import plugins/ --color --coverage
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}
      # run ansible-test sanity on tests
      - name: Run sanity tests on tests
        run: ansible-test sanity --python=3.9 --requirements --skip-test import tests/ --color --coverage
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

        
      # run ansible-test units on modules
      - name: Install dependant packages for unit tests
        run: pip install -r requirements.txt
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}
      # Install dependant ansible plugins for unit tests
      - name: Install dependant ansible plugins for unit tests
        run: mkdir -p community/internal_test_tools && git clone https://github.com/ansible-collections/community.internal_test_tools.git && mv ./community.internal_test_tools/*  ./community/internal_test_tools
        working-directory: ./ansible_collections
      
      # run ansible-test units on modules
      - name: Run unit tests on modules
        run: ansible-test units --python=3.9 --requirements tests/unit/modules/ --color --coverage
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}
